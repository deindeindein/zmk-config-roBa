#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        MissionControl {
            bindings = <&kp LC(UP_ARROW)>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESC Q         &kp W         &kp E         &kp R                       &kp T                                                         &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &lt 5 F                     &kp G        &kp LS(LG(S))                     &kp COLON      &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                       &kp B        &kp COLON                         &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 1 LS(LC(J))  &lt 2 SPACE  &lt_to_layer_0 3 LS(LC(SQT))      &kp BACKSPACE  &lt 6 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        command {
            bindings = <
&trans     &kp LC(LEFT)  &kp UP_ARROW  &kp LC(RIGHT)  &kp LG(T)                              &trans         &trans                &trans                 &trans  &trans
&kp LG(A)  &kp LEFT      &kp DOWN      &kp RIGHT      &kp LC(DOWN)  &trans      &trans       &kp LG(W)      &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans  &trans
&trans     &kp LG(X)     &kp LG(C)     &kp LG(V)      &trans        &trans      &bootloader  &kp LS(LG(T))  &kp LG(Z)             &kp LS(LG(Z))          &trans  &trans
&trans     &trans        &trans        &trans         &trans        &trans      &trans       &trans                                                              &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp QUESTION  &kp EXCLAMATION  &trans  &trans                      &trans            &kp LS(LG(N0))        &kp LG(NUMBER_9)  &kp LS(LG(NUMBER_1))  &trans
&trans  &trans        &trans           &trans  &trans  &trans      &trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)      &kp LG(NUMBER_3)  &kp LG(NUMBER_4)      &kp LG(NUMBER_5)
&trans  &trans        &trans           &trans  &trans  &trans      &trans  &trans            &kp LS(LG(NUMBER_0))  &trans            &trans                &trans
&trans  &trans        &trans           &trans  &trans  &trans      &trans  &trans                                                                          &trans
            >;
        };

        ARROWand123 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp PLUS         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp MINUS        &kp KP_NUMBER_4  &kp KP_N5        &kp KP_NUMBER_6  &kp EQUAL
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans           &kp KP_N1        &kp KP_N2        &kp KP_N3        &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &kp KP_NUMBER_0                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &kp LC(UP_ARROW)  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &kp QUESTION
&trans  &trans  &trans            &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
